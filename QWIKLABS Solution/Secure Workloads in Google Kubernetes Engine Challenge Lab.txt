gsutil -m cp gs://cloud-training/gsp335/* .

kubernetes

Nodes 2
N1 stdr 4
Networking enable.......
create


sql
name pass
us-entral

create



IAM & Admin
service account
sa-lab
create
role sql client
continue
done

create key json create


upload json file in cloudshell with upload file
ls
mv qwiklabs-gcp-.................json key.json
ls


sql
add user account
wordpress
password
add
Create Database
wordpress
utf8
create
add user account
test 
pass 
allow any host
create

Kubernetes
connect
run in cloud shell
copy gcloud container..................

kubectl create secret generic cloudsql-instance-credentials --from-file key.json

kubectl create secret generic cloudsql-db-credentials \
    --from-literal username=wordpress \
    --from-literal password='<password of wordpress>'


cat volume.yaml
kubectl create -f volume.yaml
cat wordpress.yaml | grep INSTANCE_CONNECTION_NAME

sql
overview
copy connection name


vi wordpress.yaml
change instance_....
:wq
cat wordpress.yaml | grep instances
kubectl apply -f wordpress.yaml




#task 3
helm repo add stable https:??kubernetes-charts.storage.googleapis.com/
helm repo update
helm install nginx-ingress stable/nginx-ingress
kubectl  get svc
. add_ip.sh
kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager.crds.yaml
cat issuer.yaml | grep LAB_EMAIL_ADDRESS
vi issuer.yaml
IAM and Admin copy <service account's Email>
change email
cat issuer.yaml
kubectl apply -f issuer.yaml
kubectl apply -f issuer.yaml

kubectl get svc
kubectl apply -f issuer.yaml
cat issuer.yaml


Kubernetes
services and Ingress

kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager-legacy.crds.yaml

kubectl delete -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager.crds.yaml

kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager-legacy.crds.yaml

kubectl apply -f issuer.yaml

kubectl get svc

kubectl delete -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager-legacy.crds.yaml

kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager.yaml

kubectl get svc

kubectl get svc
kubectl apply -f issuer.yaml
cat ingress.yaml
cat ingress.yaml | grep HOST_NAME
vi ingress.yaml
change host name <student00.....labdns.xyz>
cat ingress.yaml

kubectl apply -f issuer.yaml




#Task 4
kubectl apply -f network-policy.yaml
vi network-policy.yaml



open editor

open network-policy.yaml


open cloudshell
cat  network-policy.yaml
kubectl apply -f network-policy.yaml



#task 5
Kubernetes engine
clusters edit
Binary authorization   enable api 
Binary authorization enabled
save



Security
Binary Authorization

disallow all images
Add image path
docker.io/library/wordpress:latest
done
us.gcr.io/k8s-artifacts-prod/ingress-nginx/*
done
gcr.io/cloudsql-docker/*
done
quay.io/jetstack/*
done

save



#Task 6
open cloud
ll
ll | grep psp
cat psp-restrictive.yaml
ll | grep psp
kubectl apply -f psp-restrictive.yaml
cat psp-role.yaml
cat psp-use.yaml
ll | grep psp
kubectl apply -f psp-role.yaml
kubectl apply -f psp-use.yaml
kubectl apply -f psp-restrictive.yaml
cat psp-restrictive.yaml
vi psp-restrictive.yaml
edit apiVersion: policy/vlbetal
cat psp-restrictive.yaml
kubectl apply -f psp-restrictive.yaml




